{
	"info": {
		"_postman_id": "4d41ef50-5b86-443c-8f43-a17fe1725a2f",
		"name": "ANCarMessagerv0",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "21115407",
		"_collection_link": "https://lively-shadow-403091.postman.co/workspace/Team-Workspace~f5189dd6-33fd-43e0-8855-c4542a463afe/collection/21115407-4d41ef50-5b86-443c-8f43-a17fe1725a2f?action=share&creator=21115407&source=collection_link"
	},
	"item": [
		{
			"name": "notes",
			"item": [
				{
					"name": "Create note",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"New Note\",\n  \"content\": \"This is a new note.\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/notes",
						"description": "Create a new note."
					},
					"response": [
						{
							"name": "Create note",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"claimNumber\": \"C123456\",\n  \"policyNumber\": \"P987654\",\n  \"claimAmount\": 5000,\n  \"description\": \"Car accident claim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/notes"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"note3\",\n  \"title\": \"New Note\",\n  \"content\": \"This is a new note.\",\n  \"createdAt\": \"2023-05-18T16:20:00Z\",\n  \"updatedAt\": \"2023-05-18T16:20:00Z\"\n}\n"
						}
					]
				},
				{
					"name": "Get all notes",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/notes",
						"description": "Retrieve all notes."
					},
					"response": [
						{
							"name": "Get all notes",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{base_url}}/notes"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"notes\": [\n    {\n      \"id\": \"note1\",\n      \"title\": \"Meeting Notes\",\n      \"content\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n      \"createdAt\": \"2023-05-18T10:30:00Z\",\n      \"updatedAt\": \"2023-05-18T14:45:00Z\"\n    },\n    {\n      \"id\": \"note2\",\n      \"title\": \"Project Ideas\",\n      \"content\": \"Nulla facilisi. Duis aliquam mi sed diam varius scelerisque.\",\n      \"createdAt\": \"2023-05-17T15:20:00Z\",\n      \"updatedAt\": \"2023-05-18T09:10:00Z\"\n    }\n  ]\n}\n"
						}
					]
				},
				{
					"name": "Get note details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/notes/:noteId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"notes",
								":noteId"
							],
							"variable": [
								{
									"key": "noteId",
									"value": null,
									"description": "ID of the note"
								}
							]
						},
						"description": "Retrieve the details of a specific note by providing the note ID."
					},
					"response": [
						{
							"name": "Get note details",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/notes/:noteId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"notes",
										":noteId"
									],
									"variable": [
										{
											"key": "noteId",
											"value": null
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"note1\",\n  \"title\": \"Meeting Notes\",\n  \"content\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n  \"createdAt\": \"2023-05-18T10:30:00Z\",\n  \"updatedAt\": \"2023-05-18T14:45:00Z\"\n}\n"
						}
					]
				},
				{
					"name": "Update note",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Updated Note\",\n  \"content\": \"This is an updated note.\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/notes/:noteId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"notes",
								":noteId"
							],
							"variable": [
								{
									"key": "noteId",
									"value": null,
									"description": "ID of the note"
								}
							]
						},
						"description": "Update the details of a specific note identified by its note ID."
					},
					"response": [
						{
							"name": "Update note",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"claimNumber\": \"C123456\",\n  \"policyNumber\": \"P987654\",\n  \"claimAmount\": 8000,\n  \"description\": \"Updated car accident claim\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/notes/:noteId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"notes",
										":noteId"
									],
									"variable": [
										{
											"key": "noteId",
											"value": null
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"note3\",\n  \"title\": \"Updated Note\",\n  \"content\": \"This is an updated note.\",\n  \"createdAt\": \"2023-05-18T16:20:00Z\",\n  \"updatedAt\": \"2023-05-18T17:30:00Z\"\n}\n"
						}
					]
				},
				{
					"name": "Delete note",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/notes/:noteId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"notes",
								":noteId"
							],
							"variable": [
								{
									"key": "noteId",
									"value": null,
									"description": "ID of the note"
								}
							]
						},
						"description": "Delete a specific note identified by its note ID."
					},
					"response": [
						{
							"name": "Delete note",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/notes/:noteId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"notes",
										":noteId"
									],
									"variable": [
										{
											"key": "noteId",
											"value": null
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"note1\",\n    \"title\": \"Meeting Notes\",\n    \"content\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n    \"createdAt\": \"2023-05-18T10:30:00Z\",\n    \"updatedAt\": \"2023-05-18T14:45:00Z\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "Authentication",
					"item": [
						{
							"name": "Register",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code !== 200) {",
											"    return;",
											"}",
											"",
											"const response = pm.response.json(),",
											"    accessToken = response.data.token;",
											"",
											"// Storing the access token in the environment to be used in other endpoints",
											"pm.collectionVariables.set('accessToken', accessToken);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"sandrawill\",\n    \"email\": \"sandrawilliam1996@example.com\",\n    \"age\": 20,\n    \"firstName\": \"Sandra\",\n    \"lastName\": \"William\",\n    \"password\": \"sandrawill\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/signup",
								"description": "This request creates a new user.\n\n**Note:** If you want to add yourself as an admin, you can add a key named \"role\" and set the value \"admin\" as a part of the request body.\n\nThis request also has a test script that sets the authorization token received in the response in the `accessToken` collection variable. This helps you reuse the token in other requests easily."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"Arvind\",\n    \"lastName\": \"Admin\",\n    \"email\": \"arvind-admin@gmail.com\",\n    \"username\": \"arvindkalra-admin\",\n    \"password\": \"arvindkalra-admin\",\n    \"role\": \"admin\",\n    \"age\": 18\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/signup"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 12 May 2023 09:17:51 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "387"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "x-powered-by",
											"value": "Express"
										},
										{
											"key": "etag",
											"value": "W/\"183-RVxQlq25E3PoKFU4OcTJY3duAfQ\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"data\": {\n        \"user\": {\n            \"id\": 4,\n            \"username\": \"sandrawill\",\n            \"email\": \"sandrawilliam1996@example.com\",\n            \"age\": 20,\n            \"firstName\": \"Sandra\",\n            \"lastName\": \"William\",\n            \"password\": \"f4967bd8be423c9a60507c579ad58b051ac0fdca9e9d0cbcc6887bbbb24e05f5\",\n            \"role\": \"user\",\n            \"updatedAt\": \"2023-05-12T10:36:32.417Z\",\n            \"createdAt\": \"2023-05-12T10:36:32.417Z\"\n        },\n        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjQsInVzZXJuYW1lIjoic2FuZHJhd2lsbCIsImlhdCI6MTY4Mzg4Nzc5MiwiZXhwIjoxNjgzODkxMzkyfQ.1oWobYNftxayDssyHaP3E1wmRXLuGfRRXpuV6Oux-iU\"\n    }\n}"
								},
								{
									"name": "Register",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"sandrawill\",\n    \"email\": \"sandrawilliam1996@example.com\",\n    \"age\": 20,\n    \"firstName\": \"Sandra\",\n    \"lastName\": \"William\",\n    \"password\": \"sandrawill\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/signup"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 17 May 2023 12:38:14 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "382"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "x-powered-by",
											"value": "Express"
										},
										{
											"key": "etag",
											"value": "W/\"17e-vukrnygjchzdmmVyeM/fMaGFB7s\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"data\": {\n        \"user\": {\n            \"username\": \"sandrawill\",\n            \"email\": \"sandrawilliam1996@example.com\",\n            \"age\": 20,\n            \"firstName\": \"Sandra\",\n            \"lastName\": \"William\",\n            \"password\": \"sandrawill\",\n            \"role\": \"admin\"\n        },\n        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsInVzZXJuYW1lIjoiYXJ2aW5ka2FscmEtYWRtaW4iLCJpYXQiOjE2ODM3MTYyMzMsImV4cCI6MTY4MzcxOTgzM30.gbM_hx20Fz_xjSQFNAfluVJA5G_LDPYbTzl6e838V9M\"\n    }\n}"
								}
							]
						},
						{
							"name": "Log in",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code !== 200) {",
											"    return;",
											"}",
											"",
											"const response = pm.response.json(),",
											"    accessToken = response.data.token;",
											"",
											"// Storing the access token in the environment to be used in other endpoints",
											"pm.collectionVariables.set('accessToken', accessToken);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"harry123\",\n    \"password\": \"harry123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/login",
								"description": "This request lets users log in.\n\nIt has a test script that sets the authorization token received in the response in the `accessToken` collection variable. This helps you reuse the token in other requests easily."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"arvindkalra-admin\",\n    \"password\": \"arvindkalra-admin\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/login"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 12 May 2023 09:17:43 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "290"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "x-powered-by",
											"value": "Express"
										},
										{
											"key": "etag",
											"value": "W/\"122-Lcpx5oiV5u5XLWGHO3uMpf38Zig\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"data\": {\n        \"user\": {\n            \"id\": 1,\n            \"username\": \"harry123\",\n            \"email\": \"harry.smith@example.com\",\n            \"password\": \"d4cfaf03600bf1a55ba4372ceb17ff9234576eb062c1f8b78bd3c53c703f194c\",\n            \"age\": 33,\n            \"role\": \"admin\",\n            \"firstName\": \"Harry\",\n            \"lastName\": \"Smith\",\n            \"createdAt\": \"2023-05-12T10:34:32.864Z\",\n            \"updatedAt\": \"2023-05-12T10:34:32.864Z\"\n        },\n        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsInVzZXJuYW1lIjoiaGFycnkxMjMiLCJpYXQiOjE2ODM4ODc4MjcsImV4cCI6MTY4Mzg5MTQyN30.hLf55ZfzHcr4mwi8l7dpzJWuHYOZCdfZMDav9X_rfZE\"\n    }\n}"
								},
								{
									"name": "400 (Invalid Username)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"tommillera\",\n    \"password\": \"tommillera\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/login"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "91"
										},
										{
											"key": "ETag",
											"value": "W/\"5b-OTdgSjzKonfqmY8iEqC0UNIzZ+w\""
										},
										{
											"key": "Date",
											"value": "Fri, 12 May 2023 10:39:53 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": false,\n    \"error\": {\n        \"message\": \"Could not find any user with username: `tommillera`.\"\n    }\n}"
								},
								{
									"name": "400 (Password Mismatch)",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\": \"tommiller\",\n    \"password\": \"tommillera\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/login"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "84"
										},
										{
											"key": "ETag",
											"value": "W/\"54-3kqI2Q6y1TsGMiUbKk3joz9GLYA\""
										},
										{
											"key": "Date",
											"value": "Fri, 12 May 2023 10:40:20 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": false,\n    \"error\": {\n        \"message\": \"Provided username and password did not match.\"\n    }\n}"
								}
							]
						}
					],
					"description": "This folder contains requests related to creating a user profile and logging in.",
					"auth": {
						"type": "noauth"
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "User",
					"item": [
						{
							"name": "Get profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"should have status code as 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}",
											"",
											"const response = pm.response.json(),",
											"    result = response.data;",
											"",
											"const responseSchema = {",
											"    type: 'object',",
											"    properties: {",
											"        id: {",
											"            type: \"number\"",
											"        },",
											"        username: {",
											"            type: \"string\"",
											"        },",
											"        email: {",
											"            type: \"string\"",
											"        },",
											"        age: {",
											"            type: \"number\"",
											"        },",
											"        role: {",
											"            type: \"string\"",
											"        }",
											"    },",
											"    required: ['id', 'username', 'email', 'age', 'role']",
											"};",
											"",
											"pm.test('should have all the required keys in the response', function () {",
											"    pm.expect(tv4.validate(result, responseSchema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{url}}/user",
								"description": "This request lets users view their profiles."
							},
							"response": [
								{
									"name": "401",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": "{{url}}/user"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 12 May 2023 09:18:07 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "80"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "x-powered-by",
											"value": "Express"
										},
										{
											"key": "etag",
											"value": "W/\"50-pF7L2BUdQsooflNE6rUz8FD5wA8\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": false,\n    \"error\": {\n        \"message\": \"Auth headers not provided in the request.\"\n    }\n}"
								},
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "x-api-key",
												"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsInVzZXJuYW1lIjoiaGFycnkxMjMiLCJpYXQiOjE2ODM4ODc4MjcsImV4cCI6MTY4Mzg5MTQyN30.hLf55ZfzHcr4mwi8l7dpzJWuHYOZCdfZMDav9X_rfZE",
												"type": "text"
											}
										],
										"url": "{{url}}/user:id"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 12 May 2023 09:18:33 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "150"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "x-powered-by",
											"value": "Express"
										},
										{
											"key": "etag",
											"value": "W/\"96-VPiQpM3iFgWueczgIStnyQNg+sM\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"data\": {\n        \"id\": 1,\n        \"username\": \"harry123\",\n        \"email\": \"harry.smith@example.com\",\n        \"password\": \"d4cfaf03600bf1a55ba4372ceb17ff9234576eb062c1f8b78bd3c53c703f194c\",\n        \"age\": 33,\n        \"role\": \"admin\",\n        \"firstName\": \"Harry\",\n        \"lastName\": \"Smith\",\n        \"createdAt\": \"2023-05-12T10:34:32.864Z\",\n        \"updatedAt\": \"2023-05-12T10:34:32.864Z\", \n        \"allowEmail\": 0,\n        \"allowName\": 0\n\n    }\n}"
								}
							]
						},
						{
							"name": "Update profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"should have status code as 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}",
											"",
											"const response = pm.response.json(),",
											"    result = response.data;",
											"",
											"const responseSchema = {",
											"    type: 'object',",
											"    properties: {",
											"        id: {",
											"            type: \"number\"",
											"        },",
											"        username: {",
											"            type: \"string\"",
											"        },",
											"        email: {",
											"            type: \"string\"",
											"        },",
											"        age: {",
											"            type: \"number\"",
											"        },",
											"        role: {",
											"            type: \"string\"",
											"        }",
											"    },",
											"    required: ['id', 'username', 'email', 'age', 'role']",
											"};",
											"",
											"pm.test('should have all the required keys in the response', function () {",
											"    pm.expect(tv4.validate(result, responseSchema)).to.be.true;",
											"});",
											"",
											"const requestPayload = JSON.parse(pm.request.body);",
											"",
											"pm.test('should update the required properties', function () {",
											"    const keysToBeModified = Object.keys(requestPayload);",
											"",
											"    keysToBeModified.map((key) => {",
											"        pm.expect(result[key]).to.eql(requestPayload[key]);",
											"    })",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"age\": 33,\n    \"firstName\": \"Harry\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/user",
								"description": "This request lets users update details on their profiles."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"age\": 52,\n    \"firstName\": \"Hello\",\n    \"allowEmail\": 0,\n    \"allowName\": 1\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{url}}/user"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 12 May 2023 09:18:43 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "150"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "x-powered-by",
											"value": "Express"
										},
										{
											"key": "etag",
											"value": "W/\"96-VPiQpM3iFgWueczgIStnyQNg+sM\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"data\": {\n        \"id\": 1,\n        \"username\": \"harry123\",\n        \"email\": \"harry.smith@example.com\",\n        \"password\": \"d4cfaf03600bf1a55ba4372ceb17ff9234576eb062c1f8b78bd3c53c703f194c\",\n        \"age\": 21,\n        \"role\": \"admin\",\n        \"firstName\": \"Hello\",\n        \"lastName\": \"Smith\",\n        \"createdAt\": \"2023-05-12T10:34:32.864Z\",\n        \"updatedAt\": \"2023-05-12T10:37:47.928Z\",\n        \"allowEmail\": 0,\n        \"allowName\": 1\n    }\n}"
								}
							]
						}
					],
					"description": "This folder contains requests related to viewing and updating user profiles."
				},
				{
					"name": "Admin",
					"item": [
						{
							"name": "Get all users",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"should have status code as 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}",
											"",
											"const response = pm.response.json(),",
											"    result = response.data;",
											"",
											"const responseSchema = {",
											"    type: 'array',",
											"    items: {",
											"        type: 'object',",
											"        properties: {",
											"            id: {",
											"                type: \"number\"",
											"            },",
											"            username: {",
											"                type: \"string\"",
											"            },",
											"            email: {",
											"                type: \"string\"",
											"            },",
											"            age: {",
											"                type: \"number\"",
											"            },",
											"            role: {",
											"                type: \"string\"",
											"            }",
											"        },",
											"        required: ['id', 'username', 'email', 'age', 'role']",
											"    }",
											"};",
											"",
											"pm.test('should have all the required keys in the response', function () {",
											"    pm.expect(tv4.validate(result, responseSchema)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{url}}/user/all",
								"description": "This request lets admins fetch a list of all users."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": "{{url}}/user/all"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 12 May 2023 09:19:02 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "626"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "x-powered-by",
											"value": "Express"
										},
										{
											"key": "etag",
											"value": "W/\"272-heaQAnXNa57C97pjmzfC29Xkzp4\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"username\": \"harry123\",\n            \"email\": \"harry.smith@example.com\",\n            \"password\": \"d4cfaf03600bf1a55ba4372ceb17ff9234576eb062c1f8b78bd3c53c703f194c\",\n            \"age\": 33,\n            \"role\": \"admin\",\n            \"firstName\": \"Harry\",\n            \"lastName\": \"Smith\",\n            \"createdAt\": \"2023-05-12T10:34:32.864Z\",\n            \"updatedAt\": \"2023-05-12T10:38:02.468Z\"\n        },\n        {\n            \"id\": 2,\n            \"username\": \"tommiller\",\n            \"email\": \"tommiller14@example.com\",\n            \"password\": \"637caa1770c0bebfb80750cbf47d7f2b1aa5c90ab002eb230893edb54c26ebf5\",\n            \"age\": 35,\n            \"role\": \"user\",\n            \"firstName\": \"Tom\",\n            \"lastName\": \"Miller\",\n            \"createdAt\": \"2023-05-12T10:35:19.200Z\",\n            \"updatedAt\": \"2023-05-12T10:35:19.200Z\"\n        },\n        {\n            \"id\": 3,\n            \"username\": \"sarah.davis\",\n            \"email\": \"sarah.davis@example.com\",\n            \"password\": \"8ddfb53c7c150ac15826e47259b31a566bbe906b1b1303ce46c3850e5b4213cf\",\n            \"age\": 20,\n            \"role\": \"admin\",\n            \"firstName\": \"Sarah\",\n            \"lastName\": \"Davis\",\n            \"createdAt\": \"2023-05-12T10:35:56.230Z\",\n            \"updatedAt\": \"2023-05-12T10:35:56.230Z\"\n        },\n        {\n            \"id\": 4,\n            \"username\": \"sandrawill\",\n            \"email\": \"sandrawilliam1996@example.com\",\n            \"password\": \"f4967bd8be423c9a60507c579ad58b051ac0fdca9e9d0cbcc6887bbbb24e05f5\",\n            \"age\": 20,\n            \"role\": \"user\",\n            \"firstName\": \"Sandra\",\n            \"lastName\": \"William\",\n            \"createdAt\": \"2023-05-12T10:36:32.417Z\",\n            \"updatedAt\": \"2023-05-12T10:36:32.417Z\"\n        }\n    ]\n}"
								},
								{
									"name": "200 (Filter by Age)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/user/all?age=20",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"all"
											],
											"query": [
												{
													"key": "age",
													"value": "20"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "317"
										},
										{
											"key": "ETag",
											"value": "W/\"13d-lRbtN51pMRZBBjKehNx92136uMo\""
										},
										{
											"key": "Date",
											"value": "Fri, 12 May 2023 10:15:56 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"data\": [\n        {\n            \"id\": 3,\n            \"username\": \"sarah.davis\",\n            \"email\": \"sarah.davis@example.com\",\n            \"password\": \"8ddfb53c7c150ac15826e47259b31a566bbe906b1b1303ce46c3850e5b4213cf\",\n            \"age\": 20,\n            \"role\": \"admin\",\n            \"firstName\": \"Sarah\",\n            \"lastName\": \"Davis\",\n            \"createdAt\": \"2023-05-12T10:35:56.230Z\",\n            \"updatedAt\": \"2023-05-12T10:35:56.230Z\"\n        },\n        {\n            \"id\": 4,\n            \"username\": \"sandrawill\",\n            \"email\": \"sandrawilliam1996@example.com\",\n            \"password\": \"f4967bd8be423c9a60507c579ad58b051ac0fdca9e9d0cbcc6887bbbb24e05f5\",\n            \"age\": 20,\n            \"role\": \"user\",\n            \"firstName\": \"Sandra\",\n            \"lastName\": \"William\",\n            \"createdAt\": \"2023-05-12T10:36:32.417Z\",\n            \"updatedAt\": \"2023-05-12T10:36:32.417Z\"\n        }\n    ]\n}"
								},
								{
									"name": "403 (Not Admin)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": "{{url}}/user/all"
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "74"
										},
										{
											"key": "ETag",
											"value": "W/\"4a-NDRoRplGOViCLgid+swkqPVOQkQ\""
										},
										{
											"key": "Date",
											"value": "Fri, 12 May 2023 10:39:26 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": false,\n    \"error\": \"You need to be a admin to access this endpoint.\"\n}"
								}
							]
						},
						{
							"name": "Change user role",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"should have status code as 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}",
											"",
											"const response = pm.response.json(),",
											"    result = response.data;",
											"",
											"const responseSchema = {",
											"    type: 'object',",
											"    properties: {",
											"        id: {",
											"            type: \"number\"",
											"        },",
											"        username: {",
											"            type: \"string\"",
											"        },",
											"        email: {",
											"            type: \"string\"",
											"        },",
											"        age: {",
											"            type: \"number\"",
											"        },",
											"        role: {",
											"            type: \"string\"",
											"        }",
											"    },",
											"    required: ['id', 'username', 'email', 'age', 'role']",
											"};",
											"",
											"pm.test('should have all the required keys in the response', function () {",
											"    pm.expect(tv4.validate(result, responseSchema)).to.be.true;",
											"});",
											"",
											"const requestPayload = JSON.parse(pm.request.body);",
											"",
											"pm.test('should update the role of the user', function () {",
											"    pm.expect(result.role).to.eql(requestPayload.role);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"role\": \"user\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/user/change-role/:userId",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"change-role",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "2"
										}
									]
								},
								"description": "This request lets admins update the role of users.\n\nThe user ID needs to be updated in the `userId` path variable in the request URL."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"role\": \"user\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/user/change-role/:userId",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"change-role",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "2"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Fri, 12 May 2023 09:19:09 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "149"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "x-powered-by",
											"value": "Express"
										},
										{
											"key": "etag",
											"value": "W/\"95-GjqAcTjMnO7B2tSvRcrACFXOW1U\""
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"data\": {\n        \"id\": 2,\n        \"username\": \"tommiller\",\n        \"email\": \"tommiller14@example.com\",\n        \"age\": 35,\n        \"role\": \"user\",\n        \"firstName\": \"Tom\",\n        \"lastName\": \"Miller\"\n    }\n}"
								}
							]
						},
						{
							"name": "Delete user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"should have status code as 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"if (pm.response.code !== 200) {",
											"    return;",
											"}",
											"",
											"const response = pm.response.json(),",
											"    result = response.data;",
											"",
											"pm.test('should delete 1 user from the table', function () {",
											"    pm.expect(result.numberOfUsersDeleted).to.eql(1);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url}}/user/:userId",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "2"
										}
									]
								},
								"description": "This request lets admins delete user profiles.\n\nThe user ID needs to be updated in the `userId` path variable in the request URL."
							},
							"response": [
								{
									"name": "200",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/user/:userId",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												":userId"
											],
											"variable": [
												{
													"key": "userId",
													"value": "6"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "49"
										},
										{
											"key": "ETag",
											"value": "W/\"31-n9vtSZm2zh9ArtyxgfJLM4p+Uds\""
										},
										{
											"key": "Date",
											"value": "Fri, 12 May 2023 10:29:01 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": true,\n    \"data\": {\n        \"numberOfUsersDeleted\": 1\n    }\n}"
								}
							]
						}
					],
					"description": "This folder contains requests related to managing users."
				}
			]
		},
		{
			"name": "vehicles",
			"item": [
				{
					"name": "images",
					"item": [
						{
							"name": "Image upload",
							"item": [
								{
									"name": "Upload image",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "image",
													"type": "file",
													"src": "rTyLrmzLJ/beautiful-scenery.jpg"
												}
											]
										},
										"url": "{{base_url}}/upload",
										"description": "This request allows users to upload the image that needs to be processed."
									},
									"response": [
										{
											"name": "Upload image",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "image",
															"type": "file",
															"src": "rTyLrmzLJ/beautiful-scenery.jpg"
														}
													]
												},
												"url": "{{base_url}}/upload"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"success\",\n  \"message\": \"Image uploaded successfully\",\n  \"image_url\": \"https://example.com/images/beautiful-scenery.jpg\"\n}"
										}
									]
								},
								{
									"name": "Upload image from URL",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"image_url\": \"https://example.com/images/image123.jpg\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/upload/url",
										"description": "This request allows users to provide the URL of the image that needs to be processed."
									},
									"response": [
										{
											"name": "Upload image from URL",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"image_url\": \"https://example.com/images/image123.jpg\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/upload/url"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"success\",\n  \"message\": \"Image uploaded successfully\",\n  \"image_url\": \"https://example.com/images/image123.jpg\"\n}"
										}
									]
								},
								{
									"name": "Update image",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"metadata\": {\n    \"description\": \"A beautiful landscape image\",\n    \"tags\": [\"nature\", \"scenery\", \"outdoors\"]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/:image_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												":image_id"
											],
											"variable": [
												{
													"key": "image_id",
													"value": "1"
												}
											]
										},
										"description": "Updates the metadata of the image identified by the image ID."
									},
									"response": [
										{
											"name": "Update image",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"metadata\": {\n    \"description\": \"A beautiful landscape image\",\n    \"tags\": [\"nature\", \"scenery\", \"outdoors\"]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/:image_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														":image_id"
													],
													"variable": [
														{
															"key": "image_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": true,\n  \"message\": \"Image metadata updated successfully.\"\n}"
										}
									]
								},
								{
									"name": "Delete image",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{base_url}}/:image_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												":image_id"
											],
											"variable": [
												{
													"key": "image_id",
													"value": "1"
												}
											]
										},
										"description": "Deletes an image identified by the image ID."
									},
									"response": [
										{
											"name": "Delete image",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{base_url}}/:image_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														":image_id"
													],
													"variable": [
														{
															"key": "image_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": true,\n  \"id\": \"1\",\n  \"message\": \"Image deleted successfully.\"\n}"
										}
									]
								},
								{
									"name": "Get image",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/:image_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												":image_id"
											],
											"variable": [
												{
													"key": "image_id",
													"value": "1"
												}
											]
										},
										"description": "Returns the image URL identified by the image ID."
									},
									"response": [
										{
											"name": "Get image",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{base_url}}/:image_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														":image_id"
													],
													"variable": [
														{
															"key": "image_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n  \"image_url\": \"https://example.com/images/image123.jpg\"\n}"
										}
									]
								}
							],
							"description": "This folder contains requests related to uploading images to the API for processing."
						},
						{
							"name": "Image processing",
							"item": [
								{
									"name": "Resize image",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"image_url\": \"https://example.com/images/image123.jpg\",\n  \"width\": 800,\n  \"height\": 600\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/resize",
										"description": "Lets you resize an image i.e. change the dimensions (width and height) of an image while maintaining its aspect ratio."
									},
									"response": [
										{
											"name": "Resize image",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"image_url\": \"https://example.com/images/image123.jpg\",\n  \"width\": 800,\n  \"height\": 600\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/resize"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"success\",\n  \"message\": \"Image resized successfully\",\n  \"resized_image_url\": \"https://example.com/images/resized/image123_resized.jpg\"\n}"
										}
									]
								},
								{
									"name": "Crop image",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"image_url\": \"https://example.com/images/image123.jpg\",\n  \"x\": 100,\n  \"y\": 200,\n  \"width\": 400,\n  \"height\": 300\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/crop",
										"description": "Lets you crop an image i.e. select and extract a specific rectangular region or portion of an image while discarding the rest."
									},
									"response": [
										{
											"name": "Crop image",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"image_url\": \"https://example.com/images/image123.jpg\",\n  \"x\": 100,\n  \"y\": 200,\n  \"width\": 400,\n  \"height\": 300\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/crop"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"success\",\n  \"message\": \"Image cropped successfully\",\n  \"cropped_image_url\": \"https://example.com/images/cropped/image123_cropped.jpg\"\n}"
										}
									]
								},
								{
									"name": "Apply filter",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"image_url\": \"https://example.com/images/image123.jpg\",\n  \"filter_type\": \"grayscale\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/filter",
										"description": "Lets you apply a filter to an image i.e. the process of applying various visual effects or modifications to alter its appearance.\n\nFor example, applying a grayscale filter to an image will convert it into a grayscale or black-and-white version where each pixel's color is represented by shades of gray."
									},
									"response": [
										{
											"name": "Apply filter",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"image_url\": \"https://example.com/images/image123.jpg\",\n  \"filter_type\": \"grayscale\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/filter"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"success\",\n  \"message\": \"Filter applied successfully\",\n  \"filtered_image_url\": \"https://example.com/images/filtered/image123_filtered.jpg\"\n}"
										}
									]
								},
								{
									"name": "Rotate image",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"image_url\": \"https://example.com/images/image123.jpg\",\n  \"angle\": 90\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/rotate",
										"description": "Lets you rotate an image i.e. change the orientation of an image by a certain angle."
									},
									"response": [
										{
											"name": "Rotate image",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"image_url\": \"https://example.com/images/image123.jpg\",\n  \"angle\": 90\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/rotate"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n  \"status\": \"success\",\n  \"message\": \"Image rotated successfully\",\n  \"rotated_image_url\": \"https://example.com/images/rotated/image123_rotated.jpg\"\n}"
										}
									]
								},
								{
									"name": "Convert image format",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{ \n    \"image_url\": \"https://example.com/images/image123.jpg\",\n    \"target_format\": \"png\" \n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/convert-format",
										"description": "Lets you convert the image format e.g.: from jpg to png."
									},
									"response": [
										{
											"name": "Convert image format",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{ \n    \"image_url\": \"https://example.com/images/image123.jpg\",\n    \"target_format\": \"png\" \n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/convert-format"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": true,\n  \"message\": \"Image format conversion completed.\",\n  \"converted_image_url\": \"https://example.com/images/converted_image.png\"\n}"
										}
									]
								},
								{
									"name": "Compress image",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"image_url\": \"https://example.com/images/image123.jpg\",\n  \"compression_level\": 80\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/compress",
										"description": "Lets you compress the image i.e. reduce its file size while maintaining an acceptable level of image quality.\n\nThe compression level refers to the extent or intensity of the compression applied to an image. It determines how much the image's file size will be reduced and can impact the resulting image quality."
									},
									"response": [
										{
											"name": "Compress image",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"image_url\": \"https://example.com/images/image123.jpg\",\n  \"compression_level\": 80\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/compress"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": true,\n  \"message\": \"Image compression completed.\",\n  \"compressed_image_url\": \"https://example.com/images/compressed_image.jpg\"\n}"
										}
									]
								},
								{
									"name": "Add a watermark",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"image_url\": \"https://example.com/images/image123.jpg\",\n  \"watermark_text\": \"Confidential\", \n  \"position\": \"bottom-right\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/watermark",
										"description": "Lets you add a watermark to the image i.e. a visible overlay, typically a logo, text, or an identifying mark, onto an image to indicate ownership, protect copyright, or add branding."
									},
									"response": [
										{
											"name": "Watermark image",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"image_url\": \"https://example.com/images/image123.jpg\",\n  \"watermark_text\": \"Confidential\", \n  \"position\": \"bottom-right\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/watermark"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": true,\n  \"message\": \"Image watermarking completed.\",\n  \"watermarked_image_url\": \"https://example.com/images/watermarked_image.jpg\"\n}"
										}
									]
								}
							],
							"description": "This folder includes requests for various image processing operations, such as resizing, cropping, rotating, filtering, or manipulating images."
						},
						{
							"name": "Image analysis",
							"item": [
								{
									"name": "Object detection",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"image_url\": \"https://example.com/images/image123.jpg\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/object-detection",
										"description": "Identifies and locates objects within an image.\n\nThe goal of object detection is to determine the presence, position, and extent of specific objects of interest within the given input data."
									},
									"response": [
										{
											"name": "Object detection",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"image_url\": \"https://example.com/images/image123.jpg\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/object-detection"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": true,\n  \"message\": \"Object detection completed.\",\n  \"objects\": [\n    {\n      \"label\": \"cat\",\n      \"confidence\": 0.95,\n      \"bounding_box\": {\n        \"x\": 100,\n        \"y\": 200,\n        \"width\": 300,\n        \"height\": 400\n      }\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Facial recognition",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"image_url\": \"https://example.com/images/image123.jpg\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/facial-recognition",
										"description": "Lets you analyze and identify human faces within images or videos."
									},
									"response": [
										{
											"name": "Facial recognition",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"image_url\": \"https://example.com/images/image123.jpg\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/facial-recognition"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": true,\n  \"message\": \"Facial recognition completed.\",\n  \"faces\": [\n    {\n      \"face_id\": \"face_1\",\n      \"bounding_box\": {\n        \"x\": 100,\n        \"y\": 200,\n        \"width\": 300,\n        \"height\": 400\n      },\n      \"emotions\": {\n        \"happy\": 0.75,\n        \"sad\": 0.1\n      }\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Scene recognition",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "image",
													"type": "file",
													"src": "Msk2wptcA/beautiful-scenery.jpg"
												}
											]
										},
										"url": "{{base_url}}/scene-recognition",
										"description": "Lets you analyze an image and classify it into various predefined scene categories or classes."
									},
									"response": [
										{
											"name": "Scene recognition",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "image",
															"type": "file",
															"src": "Msk2wptcA/beautiful-scenery.jpg"
														}
													]
												},
												"url": "{{base_url}}/scene-recognition"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": true,\n  \"message\": \"Scene recognition completed.\",\n  \"scene\": {\n    \"label\": \"mountain\",\n    \"confidence\": 0.9\n  }\n}"
										}
									]
								},
								{
									"name": "Image captioning",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"image_url\": \"https://example.com/images/image123.jpg\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/image-captioning",
										"description": "Lets you provide an image as input and receive a textual caption that describes the image."
									},
									"response": [
										{
											"name": "Image captioning",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"image_url\": \"https://example.com/images/image123.jpg\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/image-captioning"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": true,\n  \"message\": \"Image captioning completed.\",\n  \"caption\": \"A group of people playing soccer on a field.\"\n}"
										}
									]
								}
							],
							"description": "This folder contains requests for performing analysis on images, such as object detection, facial recognition, scene recognition, or image captioning."
						},
						{
							"name": "Image classification",
							"item": [
								{
									"name": "Get image classes",
									"request": {
										"method": "GET",
										"header": [],
										"url": "{{base_url}}/classes",
										"description": "Returns the possible categories for image classification."
									},
									"response": [
										{
											"name": "Get image classes",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": "{{base_url}}/classes"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": true,\n  \"classes\": [\n    \"cat\",\n    \"dog\",\n    \"bird\",\n    \"car\",\n    \"scenery\"\n  ]\n}"
										}
									]
								},
								{
									"name": "Classify image",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "image",
													"type": "file",
													"src": "bOhn050sr/beautiful-scenery.jpg"
												}
											]
										},
										"url": "{{base_url}}/classify",
										"description": "Lets you submit an image for classification and receive predictions or probabilities for different classes to which the image belongs."
									},
									"response": [
										{
											"name": "Classify image",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "image",
															"type": "file",
															"src": "bOhn050sr/beautiful-scenery.jpg"
														}
													]
												},
												"url": "{{base_url}}/classify"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": true,\n  \"message\": \"Image classification completed.\",\n  \"predictions\": [\n    {\n      \"label\": \"scenery\",\n      \"probability\": 0.95\n    },\n    {\n      \"label\": \"dog\",\n      \"probability\": 0.03\n    },\n    {\n      \"label\": \"bird\",\n      \"probability\": 0.01\n    }\n  ]\n}"
										}
									]
								}
							],
							"description": "This folder contains endpoints specifically for image classification tasks, where the API can classify the content of an image based on predefined categories or labels."
						},
						{
							"name": "Download image",
							"item": [
								{
									"name": "Download image",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/download?image_url=https://example.com/images/processed/image123_processed.jpg",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"download"
											],
											"query": [
												{
													"key": "image_url",
													"value": "https://example.com/images/processed/image123_processed.jpg"
												}
											]
										},
										"description": "Downloads an image from the given image URL."
									},
									"response": [
										{
											"name": "Download image",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{base_url}}/download?image_url=https://example.com/images/processed/image123_processed.jpg",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"download"
													],
													"query": [
														{
															"key": "image_url",
															"value": "https://example.com/images/processed/image123_processed.jpg"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json",
													"name": "Content-Type",
													"description": "",
													"type": "text"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Image downloaded successfully\",\n    \"image_url\": \"https://example.com/images/processed/image123_processed.jpg\"\n}"
										}
									]
								}
							],
							"description": "This folder contains a request that can download an image from a specified URL or retrieve an image that the API has processed."
						}
					]
				},
				{
					"name": "Get all vehicles",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/vehicles",
						"description": "Get all news articles."
					},
					"response": [
						{
							"name": "Get all vehicles",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{base_url}}/vehicles"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"articles\": [\n    {\n      \"id\": \"article-1\",\n      \"title\": \"Breaking News\",\n      \"description\": \"This is a breaking news article.\",\n      \"author\": \"John Doe\",\n      \"published_at\": \"2023-06-01T09:00:00\",\n      \"content\": \"This is the content of the breaking news article.\"\n    },\n    {\n      \"id\": \"article-2\",\n      \"title\": \"Feature Story\",\n      \"description\": \"This is a feature story article.\",\n      \"author\": \"Jane Smith\",\n      \"published_at\": \"2023-06-01T10:00:00\",\n      \"content\": \"This is the content of the feature story article.\"\n    }\n  ]\n}\n"
						}
					]
				},
				{
					"name": "Get vehicles by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/vehicles/:Id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"vehicles",
								":Id"
							],
							"variable": [
								{
									"key": "Id",
									"value": null
								}
							]
						},
						"description": "Get a specific news article by its ID."
					},
					"response": [
						{
							"name": "Get vehicles by ID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/vehicles/:Id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"vehicles",
										":Id"
									],
									"variable": [
										{
											"key": "Id",
											"value": null
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"article-1\",\n  \"title\": \"Breaking News\",\n  \"description\": \"This is a breaking news article.\",\n  \"author\": \"John Doe\",\n  \"published_at\": \"2023-06-01T09:00:00\",\n  \"content\": \"This is the content of the breaking news article.\"\n}\n"
						}
					]
				},
				{
					"name": "Create vehicles",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"New Article\",\n  \"description\": \"This is a new article.\",\n  \"author\": \"John Doe\",\n  \"content\": \"This is the content of the new article.\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/vehicles",
						"description": "Create a news article."
					},
					"response": [
						{
							"name": "Create vehicles",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"New Article\",\n  \"description\": \"This is a new article.\",\n  \"author\": \"John Doe\",\n  \"content\": \"This is the content of the new article.\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/vehicles"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"article-3\",\n  \"title\": \"New Article\",\n  \"description\": \"This is a new article.\",\n  \"author\": \"John Doe\",\n  \"published_at\": \"2023-06-01T11:00:00\",\n  \"content\": \"This is the content of the new article.\"\n}\n"
						}
					]
				},
				{
					"name": "Update vehicles",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Updated Article\",\n  \"description\": \"This is an updated article.\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/vehicles/:Id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"vehicles",
								":Id"
							],
							"variable": [
								{
									"key": "Id",
									"value": null
								}
							]
						},
						"description": "Update an existing news article."
					},
					"response": [
						{
							"name": "Update vehicles",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Updated Article\",\n  \"description\": \"This is an updated article.\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/vehicles/:Id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"vehicles",
										":Id"
									],
									"variable": [
										{
											"key": "Id",
											"value": null
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"article-1\",\n  \"title\": \"Updated Article\",\n  \"description\": \"This is an updated article.\",\n  \"author\": \"John Doe\",\n  \"published_at\": \"2023-06-01T09:00:00\",\n  \"content\": \"This is the content of the updated article.\"\n}\n"
						}
					]
				},
				{
					"name": "Delete vehicles",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/vehicles/:Id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"vehicles",
								":Id"
							],
							"variable": [
								{
									"key": "Id",
									"value": null
								}
							]
						},
						"description": "Delete a specific news article."
					},
					"response": [
						{
							"name": "Delete vehicles",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/vehicles/:vehiclesId",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"vehicles",
										":vehiclesId"
									],
									"variable": [
										{
											"key": "vehiclesId",
											"value": null
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"article-1\",\n    \"title\": \"Breaking News\",\n    \"description\": \"This is a breaking news article.\",\n    \"author\": \"John Doe\",\n    \"published_at\": \"2023-06-01T09:00:00\",\n    \"content\": \"This is the content of the breaking news article.\"\n}"
						}
					]
				},
				{
					"name": "Get top headlines",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/vehicles/headlines",
						"description": "Get top headlines."
					},
					"response": [
						{
							"name": "Get top headlines",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{base_url}}/vehicles/headlines"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"articles\": [\n    {\n      \"id\": \"article-1\",\n      \"title\": \"Breaking News\",\n      \"description\": \"This is a breaking news article.\",\n      \"author\": \"John Doe\",\n      \"published_at\": \"2023-06-01T09:00:00\",\n      \"content\": \"This is the content of the breaking news article.\"\n    },\n    {\n      \"id\": \"article-2\",\n      \"title\": \"Feature Story\",\n      \"description\": \"This is a feature story article.\",\n      \"author\": \"Jane Smith\",\n      \"published_at\": \"2023-06-01T10:00:00\",\n      \"content\": \"This is the content of the feature story article.\"\n    }\n  ]\n}\n"
						}
					]
				},
				{
					"name": "Get all sources",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/vehicles/sources",
						"description": "Get all news sources."
					},
					"response": [
						{
							"name": "Get all sources",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{base_url}}/vehicles/sources"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"sources\": [\n    {\n      \"id\": \"source-1\",\n      \"name\": \"CNN\",\n      \"description\": \"Cable News Network\",\n      \"url\": \"https://www.cnn.com\"\n    },\n    {\n      \"id\": \"source-2\",\n      \"name\": \"BBC News\",\n      \"description\": \"British Broadcasting Corporation\",\n      \"url\": \"https://www.bbc.co.uk/news\"\n    }\n  ]\n}\n"
						}
					]
				},
				{
					"name": "Filter vehicles",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/vehicles?date=2023-06-01T09:00:00&title=Breaking News&author=John Doe",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"vehicles"
							],
							"query": [
								{
									"key": "date",
									"value": "2023-06-01T09:00:00",
									"description": "The date in the format \"YYYY-MM-DD\" to filter by."
								},
								{
									"key": "title",
									"value": "Breaking News",
									"description": "The title of the article to filter by."
								},
								{
									"key": "author",
									"value": "John Doe",
									"description": "The name of the author to filter by."
								}
							]
						},
						"description": "Get news articles filtered by various properties."
					},
					"response": [
						{
							"name": "Filter news",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/vehicles?date=2023-06-01T09:00:00&title=Breaking News&author=John Doe",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"vehicles"
									],
									"query": [
										{
											"key": "date",
											"value": "2023-06-01T09:00:00",
											"description": "The date in the format \"YYYY-MM-DD\" to filter by."
										},
										{
											"key": "title",
											"value": "Breaking News",
											"description": "The title of the article to filter by."
										},
										{
											"key": "author",
											"value": "John Doe",
											"description": "The name of the author to filter by."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"articles\": [\n    {\n      \"id\": \"article-1\",\n      \"title\": \"Breaking News\",\n      \"description\": \"This is a breaking news article.\",\n      \"author\": \"John Doe\",\n      \"published_at\": \"2023-06-01T09:00:00\",\n      \"content\": \"This is the content of the breaking news article.\"\n    }\n  ]\n}\n"
						}
					]
				},
				{
					"name": "Get related vehicles",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/vehicles/:articleId/related",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"vehicles",
								":articleId",
								"related"
							],
							"variable": [
								{
									"key": "articleId",
									"value": null,
									"description": "The unique identifier of the article to retrieve related news for."
								}
							]
						},
						"description": "Get related news articles based on a given article."
					},
					"response": [
						{
							"name": "Get related news",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/vehicles/:Id/related",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"vehicles",
										":Id",
										"related"
									],
									"variable": [
										{
											"key": "Id",
											"value": null
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"articles\": [\n    {\n      \"id\": \"related-1\",\n      \"title\": \"Related Article 1\",\n      \"description\": \"This is a related article 1.\",\n      \"author\": \"John Doe\",\n      \"published_at\": \"2023-06-01T09:30:00\",\n      \"content\": \"This is the content of the related article 1.\"\n    },\n    {\n      \"id\": \"related-2\",\n      \"title\": \"Related Article 2\",\n      \"description\": \"This is a related article 2.\",\n      \"author\": \"Jane Smith\",\n      \"published_at\": \"2023-06-01T11:00:00\",\n      \"content\": \"This is the content of the related article 2.\"\n    }\n  ]\n}\n"
						}
					]
				}
			]
		},
		{
			"name": "info",
			"item": [
				{
					"name": "Search",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/search?q=shoes&page=1&limit=10&sort=title&order=descending",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "shoes",
									"description": "The search query string"
								},
								{
									"key": "page",
									"value": "1",
									"description": "The page number to retrieve"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "The maximum number of results per page"
								},
								{
									"key": "sort",
									"value": "title",
									"description": "The sorting option for the results"
								},
								{
									"key": "order",
									"value": "descending",
									"description": "The sorting order for the results"
								}
							]
						},
						"description": "Perform a search and retrieve results based on specified criteria such as limit, page number, sorting options."
					},
					"response": [
						{
							"name": "Search",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/search?q=shoes&page=1&limit=10&sort=title&order=descending",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "q",
											"value": "shoes",
											"description": "The search query string"
										},
										{
											"key": "page",
											"value": "1",
											"description": "The page number to retrieve"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "The maximum number of results per page"
										},
										{
											"key": "sort",
											"value": "title",
											"description": "The sorting option for the results"
										},
										{
											"key": "order",
											"value": "descending",
											"description": "The sorting order for the results"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"results\": [\n    {\n      \"id\": \"shoe-1\",\n      \"title\": \"Running Shoes\",\n      \"description\": \"These running shoes are designed for comfort and performance.\",\n      \"brand\": \"Nike\",\n      \"category\": \"Running\",\n      \"url\": \"https://example.com/shoes/running/1\",\n      \"imageUrl\": \"https://example.com/images/running-shoes.jpg\"\n    },\n    {\n      \"id\": \"shoe-2\",\n      \"title\": \"Basketball Shoes\",\n      \"description\": \"These basketball shoes provide excellent traction and support on the court.\",\n      \"brand\": \"Adidas\",\n      \"category\": \"Basketball\",\n      \"url\": \"https://example.com/shoes/basketball/1\",\n      \"imageUrl\": \"https://example.com/images/basketball-shoes.jpg\"\n    },\n    {\n      \"id\": \"shoe-3\",\n      \"title\": \"Casual Sneakers\",\n      \"description\": \"These casual sneakers are perfect for everyday wear.\",\n      \"brand\": \"Puma\",\n      \"category\": \"Casual\",\n      \"url\": \"https://example.com/shoes/casual/1\",\n      \"imageUrl\": \"https://example.com/images/casual-sneakers.jpg\"\n    }\n  ]\n}\n"
						}
					]
				},
				{
					"name": "Auto-complete",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/search/autocomplete?q=shoes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"search",
								"autocomplete"
							],
							"query": [
								{
									"key": "q",
									"value": "shoes",
									"description": "The partial query string."
								}
							]
						},
						"description": "Get auto-complete suggestions based on a partial search query."
					},
					"response": [
						{
							"name": "Auto-complete",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/search/autocomplete?q=shoes",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"search",
										"autocomplete"
									],
									"query": [
										{
											"key": "q",
											"value": "shoes",
											"description": "The partial query string."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"suggestions\": [\n    \"shoes for running\",\n    \"shoes for men\",\n    \"shoes for women\",\n    \"shoes\"\n  ]\n}\n"
						}
					]
				},
				{
					"name": "Popular",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/search/popular",
						"description": "Retrieve a list of popular search queries."
					},
					"response": [
						{
							"name": "Popular",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{base_url}}/search/popular"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"queries\": [\n    \"Running Shoes\",\n    \"Basketball Shoes\",\n    \"Casual Sneakers\"\n  ]\n}\n"
						}
					]
				},
				{
					"name": "Filter",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/search/filter?q=shoes&category=Running&brand=Nike",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"search",
								"filter"
							],
							"query": [
								{
									"key": "q",
									"value": "shoes",
									"description": "The search query string"
								},
								{
									"key": "category",
									"value": "Running",
									"description": "The category of the results"
								},
								{
									"key": "brand",
									"value": "Nike",
									"description": "The brand of the results"
								}
							]
						},
						"description": "Perform a filtered search based on specific criteria such as category, brand, title."
					},
					"response": [
						{
							"name": "Filter",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/search/filter?q=shoes&category=Running&brand=Nike",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"search",
										"filter"
									],
									"query": [
										{
											"key": "q",
											"value": "shoes",
											"description": "The search query string"
										},
										{
											"key": "category",
											"value": "Running",
											"description": "The category of the results"
										},
										{
											"key": "brand",
											"value": "Nike",
											"description": "The brand of the results"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n  \"results\": [\n    {\n      \"id\": \"shoe-1\",\n      \"title\": \"Running Shoes\",\n      \"description\": \"These running shoes are designed for comfort and performance.\",\n      \"brand\": \"Nike\",\n      \"category\": \"Running\",\n      \"url\": \"https://example.com/shoes/running/1\",\n      \"imageUrl\": \"https://example.com/images/running-shoes.jpg\"\n    }\n  ],\n  \"pagination\": {\n    \"totalResults\": 100,\n    \"currentPage\": 1,\n    \"totalPages\": 10,\n    \"pageSize\": 10\n  }\n}\n"
						}
					]
				},
				{
					"name": "Related",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/search/:shoeId/related",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"search",
								":shoeId",
								"related"
							],
							"variable": [
								{
									"key": "shoeId",
									"value": null,
									"description": "The ID of the shoes"
								}
							]
						},
						"description": "Retrieve a list of related items based on the given ID."
					},
					"response": [
						{
							"name": "Related",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/search/:shoeId/related",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"search",
										":shoeId",
										"related"
									],
									"variable": [
										{
											"key": "shoeId",
											"value": null,
											"description": "The ID of the shoes"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"related\": [\n        {\n            \"id\": \"nike-1\",\n            \"title\": \"Nike Air Zoom Pegasus 38\",\n            \"description\": \"The Nike Air Zoom Pegasus 38 offers responsive cushioning and a secure fit for your daily runs.\",\n            \"brand\": \"Nike\",\n            \"category\": \"Running\",\n            \"url\": \"https://example.com/shoes/nike/running/1\",\n            \"imageUrl\": \"https://example.com/images/nike-air-zoom-pegasus-38.jpg\"\n        },\n        {\n            \"id\": \"nike-2\",\n            \"title\": \"Nike React Infinity Run Flyknit 2\",\n            \"description\": \"The Nike React Infinity Run Flyknit 2 delivers a smooth and comfortable ride, helping reduce the risk of running-related injuries.\",\n            \"brand\": \"Nike\",\n            \"category\": \"Running\",\n            \"url\": \"https://example.com/shoes/nike/running/2\",\n            \"imageUrl\": \"https://example.com/images/nike-react-infinity-run-flyknit-2.jpg\"\n        }\n    ]\n}"
						}
					]
				}
			]
		}
	]
}